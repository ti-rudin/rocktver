[
    {
        "id": "e6bc8fcb02c15518",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "373ede32454d5747",
        "type": "group",
        "z": "e6bc8fcb02c15518",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "caa36ec009038d1a",
            "85a473180350d074",
            "cc432a8e0784b0f9",
            "2e7a67404d21442a",
            "d39d07fafbda681e"
        ],
        "x": 974,
        "y": 39,
        "w": 672,
        "h": 142
    },
    {
        "id": "de2918815c34c8e3",
        "type": "redis-config",
        "name": "Local",
        "options": "redis://:YzRAdGgkFg@redis:6379",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "f120eab2.0a60a8",
        "type": "redis-config",
        "name": "redis:6379",
        "options": "redis://:YzRAdGgkFg@redis:6379",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "8d62db31fd22cba6",
        "type": "notify-events-channel",
        "name": "test",
        "token": "UXeAzMi3DPeue88Fk5r8mOzskYx574TE",
        "tokenType": "str"
    },
    {
        "id": "8d22a1ef75f18657",
        "type": "nexmobasic"
    },
    {
        "id": "b02b9e6ed72d8945",
        "type": "redis-instance",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "name": "",
        "topic": "redis",
        "location": "flow",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "b87a3524493a2d08",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 540,
        "y": 240,
        "wires": [
            [
                "f3f592ac083f807d"
            ]
        ]
    },
    {
        "id": "e1826b8bac6ebcbb",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\nlet topic = \"test\";\nmsg.payload = [topic, \"qq4777777\"];\nmsg.topic = \"\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "b87a3524493a2d08"
            ]
        ]
    },
    {
        "id": "ed906b68686cc0ad",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 240,
        "wires": [
            [
                "e1826b8bac6ebcbb"
            ]
        ]
    },
    {
        "id": "f3f592ac083f807d",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 240,
        "wires": []
    },
    {
        "id": "f63c211f7cf81945",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/apites",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "ec812f2a4ebddc9d"
            ]
        ]
    },
    {
        "id": "b2e2f901b401f316",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 760,
        "y": 420,
        "wires": []
    },
    {
        "id": "b76c53178f138eb7",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "ec812f2a4ebddc9d",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\nmsg.payload = [];\nmsg.topic = \"test\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 380,
        "wires": [
            [
                "1165f1e6e1b45e59"
            ]
        ]
    },
    {
        "id": "1165f1e6e1b45e59",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 560,
        "y": 360,
        "wires": [
            [
                "b76c53178f138eb7",
                "b2e2f901b401f316"
            ]
        ]
    },
    {
        "id": "08eab6b51406d297",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/api",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "1cf1cedaf842cb84",
                "2a67f2ef7a0cab52"
            ]
        ]
    },
    {
        "id": "e5b8299d134cafcc",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 700,
        "y": 600,
        "wires": []
    },
    {
        "id": "8c610814a99e3125",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 520,
        "wires": []
    },
    {
        "id": "893c1f0c87f152d8",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\nmsg.payload = [];\nmsg.topic = \"test\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 520,
        "wires": [
            [
                "78cf3e06107ca7aa"
            ]
        ]
    },
    {
        "id": "78cf3e06107ca7aa",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 560,
        "y": 520,
        "wires": [
            [
                "8c610814a99e3125"
            ]
        ]
    },
    {
        "id": "1cf1cedaf842cb84",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 680,
        "wires": []
    },
    {
        "id": "2a67f2ef7a0cab52",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "let id, idq\nid = msg.payload.id;\nlet response;\n\nif ((id == \"vkontakte|248618038\") || (id == \"google-oauth2|105330374900705899224\")){\n    idq =\"admin\";\n} else {\n    idq =\"nonadmin\";\n}\n\n\n\n\nresponse = {\n    id: idq,\n    qq: \"qq\"\n}\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 600,
        "wires": [
            [
                "e5b8299d134cafcc",
                "64770c8838678f67"
            ]
        ]
    },
    {
        "id": "64770c8838678f67",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 660,
        "wires": []
    },
    {
        "id": "caa36ec009038d1a",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "g": "373ede32454d5747",
        "name": "gettest",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1080,
        "y": 140,
        "wires": [
            [
                "85a473180350d074"
            ]
        ]
    },
    {
        "id": "85a473180350d074",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "373ede32454d5747",
        "name": "gettest(id)",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\n// Code added here will be run once\n// whenever the node is deployed.\nlet gettest = function (id = msg.payload) {\n    \n    let promise = new Promise((resolve, reject) => {\n        msg.resolve = resolve;\n        msg.reject = reject;\n    });\n    \n\n    msg.topic = id;\n    msg.payload = [];\n\n    node.send(Object.assign({}, msg));\n    \n    return promise;\n};\n\nglobal.set('gettest', gettest);",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 140,
        "wires": [
            [
                "cc432a8e0784b0f9"
            ]
        ]
    },
    {
        "id": "cc432a8e0784b0f9",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "373ede32454d5747",
        "server": "f120eab2.0a60a8",
        "command": "GET",
        "name": "get test",
        "topic": "msg.payload",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1400,
        "y": 140,
        "wires": [
            [
                "2e7a67404d21442a"
            ]
        ]
    },
    {
        "id": "2e7a67404d21442a",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "373ede32454d5747",
        "name": "resolve",
        "func": "msg.resolve(msg.payload);\n\n// reject\n// setTimeout(function () {\n//     msg.reject({message: 'Could not request joke'});\n// }, 2000);",
        "outputs": "0",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 140,
        "wires": []
    },
    {
        "id": "c6f75d76df02c176",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "gettest (\"test\")",
        "func": "let id = msg.payload;\nconst gbl = global.get('gettest')(id);\n\ngbl.then(gbl => {\n\n    msg.payload = gbl;\n\n\n    node.status({ fill: \"green\", shape: \"dot\" });\n    node.send(msg);\n\n}).catch(error => {\n\n\n    node.status({ fill: \"red\", shape: \"dot\" });\n\n    node.error(error);\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 140,
        "wires": [
            [
                "fcf602c38fa398b2"
            ]
        ]
    },
    {
        "id": "fcf602c38fa398b2",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 140,
        "wires": []
    },
    {
        "id": "308b3c2962aac698",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "x": 1770,
        "y": 140,
        "wires": [
            [
                "c6f75d76df02c176"
            ]
        ]
    },
    {
        "id": "d39d07fafbda681e",
        "type": "comment",
        "z": "e6bc8fcb02c15518",
        "g": "373ede32454d5747",
        "name": "Функции",
        "info": "",
        "x": 1060,
        "y": 80,
        "wires": []
    },
    {
        "id": "bc2e3fa8c1533580",
        "type": "notify-events",
        "z": "e6bc8fcb02c15518",
        "name": "ку",
        "channel": "8d62db31fd22cba6",
        "title": "ку",
        "titleType": "str",
        "text": "payload",
        "textType": "msg",
        "priority": "normal",
        "priorityType": "str",
        "level": "info",
        "levelType": "str",
        "images": [],
        "files": [],
        "actionHost": "http://77.87.212.142:1880/",
        "actions": [],
        "outputs": 0,
        "x": 910,
        "y": 800,
        "wires": []
    },
    {
        "id": "72edd730bcad6ba3",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Normal",
        "payload": "re",
        "payloadType": "str",
        "x": 740,
        "y": 800,
        "wires": [
            [
                "bc2e3fa8c1533580"
            ]
        ]
    },
    {
        "id": "6de412619eb8c252",
        "type": "sendsms",
        "z": "e6bc8fcb02c15518",
        "creds": "8d22a1ef75f18657",
        "to": "79651050211",
        "fr": "79651050211",
        "text": "q",
        "unicode": false,
        "x": 830,
        "y": 900,
        "wires": [
            [
                "a706c52d15358471"
            ]
        ]
    },
    {
        "id": "b89b8befc0703c94",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 660,
        "y": 900,
        "wires": [
            [
                "6de412619eb8c252"
            ]
        ]
    },
    {
        "id": "a706c52d15358471",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 900,
        "wires": []
    },
    {
        "id": "ca376d4abfd01c4b",
        "type": "http request",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://admin.rocktver.ru/api/artists?populate=avatar",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 1100,
        "wires": [
            [
                "c6f8e477fe44d4b5",
                "1188fe344bf433d3"
            ]
        ]
    },
    {
        "id": "c6f8e477fe44d4b5",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1200,
        "wires": []
    },
    {
        "id": "032576dece827df6",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1100,
        "wires": [
            [
                "ca376d4abfd01c4b"
            ]
        ]
    },
    {
        "id": "c18c893de220818d",
        "type": "split",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "edb7e492f34f6ae2"
            ]
        ]
    },
    {
        "id": "fe5f4a52a2917a32",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1188fe344bf433d3",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "let data = msg.payload.data;\nmsg = {};\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1100,
        "wires": [
            [
                "c18c893de220818d"
            ]
        ]
    },
    {
        "id": "edb7e492f34f6ae2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "let avatar = msg.payload.attributes.avatar.data.attributes.url\nmsg.payload.attributes = {};\nmsg.payload.avatar = avatar;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1100,
        "wires": [
            [
                "fe5f4a52a2917a32"
            ]
        ]
    }
]